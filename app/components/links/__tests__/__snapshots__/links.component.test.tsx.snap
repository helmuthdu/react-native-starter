// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "height": 1334,
      },
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
      },
    ]
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <RCTScrollView
        style={
          Object {
            "backgroundColor": "#fff",
            "flex": 1,
          }
        }
      >
        <View>
          <View>
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "marginBottom": 12,
                  "marginLeft": 15,
                  "marginTop": 9,
                }
              }
            >
              Resources
            </Text>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#fdfdfd",
                  "borderBottomColor": "#EDEDED",
                  "borderBottomWidth": 0.5,
                  "opacity": 1,
                  "paddingHorizontal": 15,
                  "paddingVertical": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginRight": 9,
                    }
                  }
                >
                  <Image
                    fadeDuration={0}
                    resizeMode="contain"
                    source={1}
                    style={
                      Object {
                        "height": 20,
                        "marginTop": 1,
                        "width": 20,
                      }
                    }
                  />
                </View>
                <View>
                  <Text
                    style={
                      Object {
                        "fontSize": 15,
                        "marginTop": 1,
                      }
                    }
                  >
                    Read the Expo documentation
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#fdfdfd",
                  "borderBottomColor": "#EDEDED",
                  "borderBottomWidth": 0.5,
                  "opacity": 1,
                  "paddingHorizontal": 15,
                  "paddingVertical": 15,
                }
              }
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "marginRight": 9,
                    }
                  }
                >
                  <Text />
                </View>
                <View>
                  <Text
                    style={
                      Object {
                        "fontSize": 15,
                        "marginTop": 1,
                      }
                    }
                  >
                    Ask a question on the Expo forums
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </RCTScrollView>
</View>
`;
